var $jscomp = $jscomp || {}; $jscomp.scope = {}; $jscomp.ASSUME_ES5 = !1; $jscomp.ASSUME_NO_NATIVE_MAP = !1; $jscomp.ASSUME_NO_NATIVE_SET = !1; $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { a != Array.prototype && a != Object.prototype && (a[b] = c.value) }; $jscomp.getGlobal = function (a) { return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a }; $jscomp.global = $jscomp.getGlobal(this); $jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () { $jscomp.initSymbol = function () { }; $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol) }; $jscomp.Symbol = function () { var a = 0; return function (b) { return $jscomp.SYMBOL_PREFIX + (b || "") + a++ } }();
$jscomp.initSymbolIterator = function () { $jscomp.initSymbol(); var a = $jscomp.global.Symbol.iterator; a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator")); "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, { configurable: !0, writable: !0, value: function () { return $jscomp.arrayIterator(this) } }); $jscomp.initSymbolIterator = function () { } }; $jscomp.arrayIterator = function (a) { var b = 0; return $jscomp.iteratorPrototype(function () { return b < a.length ? { done: !1, value: a[b++] } : { done: !0 } }) };
$jscomp.iteratorPrototype = function (a) { $jscomp.initSymbolIterator(); a = { next: a }; a[$jscomp.global.Symbol.iterator] = function () { return this }; return a }; $jscomp.makeIterator = function (a) { $jscomp.initSymbolIterator(); var b = a[Symbol.iterator]; return b ? b.call(a) : $jscomp.arrayIterator(a) }; $jscomp.arrayFromIterator = function (a) { for (var b, c = []; !(b = a.next()).done;)c.push(b.value); return c }; $jscomp.arrayFromIterable = function (a) { return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a)) };
$jscomp.polyfill = function (a, b, c, d) { if (b) { c = $jscomp.global; a = a.split("."); for (d = 0; d < a.length - 1; d++) { var e = a[d]; e in c || (c[e] = {}); c = c[e] } a = a[a.length - 1]; d = c[a]; b = b(d); b != d && null != b && $jscomp.defineProperty(c, a, { configurable: !0, writable: !0, value: b }) } }; $jscomp.polyfill("Object.is", function (a) { return a ? a : function (a, c) { return a === c ? 0 !== a || 1 / a === 1 / c : a !== a && c !== c } }, "es6", "es3");
$jscomp.iteratorFromArray = function (a, b) { $jscomp.initSymbolIterator(); a instanceof String && (a += ""); var c = 0, d = { next: function () { if (c < a.length) { var e = c++; return { value: b(e, a[e]), done: !1 } } d.next = function () { return { done: !0, value: void 0 } }; return d.next() } }; d[Symbol.iterator] = function () { return d }; return d }; $jscomp.polyfill("Array.prototype.keys", function (a) { return a ? a : function () { return $jscomp.iteratorFromArray(this, function (a) { return a }) } }, "es6", "es3");
$jscomp.owns = function (a, b) { return Object.prototype.hasOwnProperty.call(a, b) }; $jscomp.assign = "function" == typeof Object.assign ? Object.assign : function (a, b) { for (var c = 1; c < arguments.length; c++) { var d = arguments[c]; if (d) for (var e in d) $jscomp.owns(d, e) && (a[e] = d[e]) } return a }; $jscomp.polyfill("Object.assign", function (a) { return a || $jscomp.assign }, "es6", "es3"); $jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function (a) {
  function b() { this.batch_ = null } function c(a) { return a instanceof e ? a : new e(function (b, c) { b(a) }) } if (a && !$jscomp.FORCE_POLYFILL_PROMISE) return a; b.prototype.asyncExecute = function (a) { null == this.batch_ && (this.batch_ = [], this.asyncExecuteBatch_()); this.batch_.push(a); return this }; b.prototype.asyncExecuteBatch_ = function () { var a = this; this.asyncExecuteFunction(function () { a.executeBatch_() }) }; var d = $jscomp.global.setTimeout; b.prototype.asyncExecuteFunction = function (a) {
    d(a,
      0)
  }; b.prototype.executeBatch_ = function () { for (; this.batch_ && this.batch_.length;) { var a = this.batch_; this.batch_ = []; for (var b = 0; b < a.length; ++b) { var c = a[b]; a[b] = null; try { c() } catch (k) { this.asyncThrow_(k) } } } this.batch_ = null }; b.prototype.asyncThrow_ = function (a) { this.asyncExecuteFunction(function () { throw a; }) }; var e = function (a) { this.state_ = 0; this.result_ = void 0; this.onSettledCallbacks_ = []; var b = this.createResolveAndReject_(); try { a(b.resolve, b.reject) } catch (h) { b.reject(h) } }; e.prototype.createResolveAndReject_ =
    function () { function a(a) { return function (e) { c || (c = !0, a.call(b, e)) } } var b = this, c = !1; return { resolve: a(this.resolveTo_), reject: a(this.reject_) } }; e.prototype.resolveTo_ = function (a) { if (a === this) this.reject_(new TypeError("A Promise cannot resolve to itself")); else if (a instanceof e) this.settleSameAsPromise_(a); else { a: switch (typeof a) { case "object": var b = null != a; break a; case "function": b = !0; break a; default: b = !1 }b ? this.resolveToNonPromiseObj_(a) : this.fulfill_(a) } }; e.prototype.resolveToNonPromiseObj_ = function (a) {
      var b =
        void 0; try { b = a.then } catch (h) { this.reject_(h); return } "function" == typeof b ? this.settleSameAsThenable_(b, a) : this.fulfill_(a)
    }; e.prototype.reject_ = function (a) { this.settle_(2, a) }; e.prototype.fulfill_ = function (a) { this.settle_(1, a) }; e.prototype.settle_ = function (a, b) { if (0 != this.state_) throw Error("Cannot settle(" + a + ", " + b + "): Promise already settled in state" + this.state_); this.state_ = a; this.result_ = b; this.executeOnSettledCallbacks_() }; e.prototype.executeOnSettledCallbacks_ = function () {
      if (null != this.onSettledCallbacks_) {
        for (var a =
          0; a < this.onSettledCallbacks_.length; ++a)f.asyncExecute(this.onSettledCallbacks_[a]); this.onSettledCallbacks_ = null
      }
    }; var f = new b; e.prototype.settleSameAsPromise_ = function (a) { var b = this.createResolveAndReject_(); a.callWhenSettled_(b.resolve, b.reject) }; e.prototype.settleSameAsThenable_ = function (a, b) { var c = this.createResolveAndReject_(); try { a.call(b, c.resolve, c.reject) } catch (k) { c.reject(k) } }; e.prototype.then = function (a, b) {
      function c(a, b) {
        return "function" == typeof a ? function (b) { try { d(a(b)) } catch (r) { g(r) } } :
          b
      } var d, g, f = new e(function (a, b) { d = a; g = b }); this.callWhenSettled_(c(a, d), c(b, g)); return f
    }; e.prototype.catch = function (a) { return this.then(void 0, a) }; e.prototype.callWhenSettled_ = function (a, b) { function c() { switch (e.state_) { case 1: a(e.result_); break; case 2: b(e.result_); break; default: throw Error("Unexpected state: " + e.state_); } } var e = this; null == this.onSettledCallbacks_ ? f.asyncExecute(c) : this.onSettledCallbacks_.push(c) }; e.resolve = c; e.reject = function (a) { return new e(function (b, c) { c(a) }) }; e.race = function (a) {
      return new e(function (b,
        e) { for (var d = $jscomp.makeIterator(a), f = d.next(); !f.done; f = d.next())c(f.value).callWhenSettled_(b, e) })
    }; e.all = function (a) { var b = $jscomp.makeIterator(a), d = b.next(); return d.done ? c([]) : new e(function (a, e) { function f(b) { return function (c) { l[b] = c; m--; 0 == m && a(l) } } var l = [], m = 0; do l.push(void 0), m++ , c(d.value).callWhenSettled_(f(l.length - 1), e), d = b.next(); while (!d.done) }) }; return e
}, "es6", "es3");
$jscomp.checkStringArgs = function (a, b, c) { if (null == a) throw new TypeError("The 'this' value for String.prototype." + c + " must not be null or undefined"); if (b instanceof RegExp) throw new TypeError("First argument to String.prototype." + c + " must not be a regular expression"); return a + "" };
$jscomp.polyfill("String.prototype.startsWith", function (a) { return a ? a : function (a, c) { var b = $jscomp.checkStringArgs(this, a, "startsWith"); a += ""; var e = b.length, f = a.length; c = Math.max(0, Math.min(c | 0, b.length)); for (var g = 0; g < f && c < e;)if (b[c++] != a[g++]) return !1; return g >= f } }, "es6", "es3");
var DeepProxy$$module$DeepProxy = function (a, b, c) {
  var d = this; b = void 0 === b ? {} : b; this.compare = function (a, b) { if (typeof a !== typeof b) return !1; if (a instanceof Function && b instanceof Function) return a.toString() === b.toString(); if (!(a instanceof Object || b instanceof Object)) return Object.is(a, b); if (Object.keys(a).length !== Object.keys(b).length) return !1; if (0 === Object.keys(a).length) return !0; for (var c in a) if (!d.compare(a[c], b[c])) return !1; return !0 }; this.proxify = function (a, b) {
    for (var c in a) a[c] instanceof Object &&
      (a[c] = new Proxy(d.proxify(a[c], b), b)); return a
  }; this.handler = { set: function (b, c, g) { d.compare(b[c], g) || (b[c] = d.proxify(g, d.handler), d.doCallback && a(d)); return !0 } }; this.doCallback = !0; c = c || this.handler; this.data = new Proxy(this.proxify(b, c), c)
}, module$DeepProxy = {}; module$DeepProxy.default = DeepProxy$$module$DeepProxy; var PlumeElement$$module$Plume = function (a, b, c) { this.type = a; this.prop = b; this.childs = c }, el$$module$Plume = function (a, b, c) { b = void 0 === b ? {} : b; c = void 0 === c ? [] : c; return new PlumeElement$$module$Plume(a, b, c) }, Plume$$module$Plume = function (a, b, c, d) {
  b = void 0 === b ? {} : b; c = void 0 === c ? {} : c; var e, f = Object.assign({
    specialTypes: {
      _TEXT: function (a) { return document.createTextNode(a.prop.content) }, _SHADOW: function (a) {
        var b = g(el$$module$Plume("plume-component")), c = b.attachShadow(a.prop.shadow); c.appendChild(g(a.prop.template));
        c.appendChild(g(module$JML.style({}, a.prop.css))); return b
      }
    }, specialProps: { class: function (a, b) { if (!(b instanceof Array)) throw Error("Classes should be in array"); b.filter(function (a) { return a }).forEach(function (b) { return a.classList.add(b) }) }, style: function (a, b) { return Object.keys(b).forEach(function (c) { var d = c.replace(/([A-Z])/g, "-$1").toLowerCase(), e = b[c] instanceof Array; a.style.setProperty(d, e ? b[c][0] : b[c], e ? b[c][1] : "") }) } }
  }, c), g = function (a) {
    if (a.type in f.specialTypes) return f.specialTypes[a.type](a);
    var b = document.createElement(a.type); h(b, a.prop); a.childs.map(g).forEach(b.appendChild.bind(b)); return b
  }, p = function (a, b, c) { var d = function (a, b, c) { a.setAttribute(b, c); a[b] = c }; b = b.toLowerCase(); if (b in f.specialProps) return f.specialProps[b](a, c); /^on/.test(b) ? a.addEventListener(b.slice(2), function (b) { return c(a, b) }) : "boolean" === typeof c ? c && d(a, b, c) : d(a, b, c) }, h = function (a, b) { return Object.keys(b).forEach(function (c) { return p(a, c, b[c]) }) }, k = function (a, b, c) {
    c = void 0 === c ? {} : c; a instanceof Text ? b.content !==
      c.content && (a.textContent = b.content) : Object.keys(Object.assign({}, b, c)).forEach(function (d) { var e = b[d], f = c[d]; e ? f && e === f || p(a, d, e) : a.removeAttribute(d) })
  }, q = function (a, b, c, d) {
    d = void 0 === d ? 0 : d; if (!c) a.appendChild(g(b)); else if (!b) a.removeChild(a.childNodes[d]); else if (b.type !== c.type || b.childs.length !== c.childs.length) a.replaceChild(g(b), a.childNodes[d]); else if (b.type) {
      k(a.childNodes[d], b.prop, c.prop); for (var e = 0; e < Math.max(b.childs.length, c.childs.length); e++)q(a.childNodes[d], b.childs[e], c.childs[e],
        e)
    }
  }; if (!d) return new Promise(function (d) { window.onload = function () { return d(Plume$$module$Plume(a, b, c, document.body)) } }); b.__PLUME__ = { routerData: { hash: location.hash, data: {} } }; var n = new module$DeepProxy.default(function (b) { b.doCallback = !1; var c = a(b.data); b.doCallback = !0; q(d, c, e); e = c }, b); window.onhashchange = function (a) { return n.data.__PLUME__.lastRouteChange = (new Date).getTime() }; n.data.__PLUME__.initialized = !0; return n.data
}, $jscompDefaultExport$$module$Plume = Plume$$module$Plume, module$Plume = {};
module$Plume.PlumeElement = PlumeElement$$module$Plume; module$Plume.el = el$$module$Plume; module$Plume.Plume = Plume$$module$Plume; module$Plume.default = $jscompDefaultExport$$module$Plume; var el$$module$JML = function (a, b, c) { b = void 0 === b ? {} : b; c = void 0 === c ? [] : c; return new PlumeElement$$module$Plume(a, b, c) }, $jscompDefaultExport$$module$JML = el$$module$JML, div$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("div", a, b) }, span$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("span", a, b) }, br$$module$JML = function (a) { a = void 0 === a ? {} : a; return el$$module$JML("br", a) }, hr$$module$JML = function (a) {
  a = void 0 === a ? {} : a; return el$$module$JML("hr",
    a)
}, button$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("button", a, b) }, header$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("header", a, b) }, navbar$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("nav", a, b) }, footer$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("footer", a, b) }, article$$module$JML = function (a, b) {
  a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("article",
    a, b)
}, input$$module$JML = function (a) { a = void 0 === a ? {} : a; return el$$module$JML("input", Object.assign({ placeholder: "", oninvalid: function (a, c) { return c.preventDefault() } }, a), []) }, textarea$$module$JML = function (a) { a = void 0 === a ? {} : a; return el$$module$JML("textarea", a, []) }, table$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("table", a, b) }, tr$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("tr", a, b) }, td$$module$JML = function (a, b) {
  a = void 0 ===
    a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("td", a, b)
}, th$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("th", a, b) }, p$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("p", a, b) }, b$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("b", a, b) }, h$$module$JML = function (a, b, c) { a = void 0 === a ? {} : a; b = void 0 === b ? "" : b; return el$$module$JML("h" + clamp$$module$JML(void 0 === c ? 3 : c, 1, 6), a, [text$$module$JML(b)]) },
  a$$module$JML = function (a, b, c) { a.href = b; return el$$module$JML("a", a, [text$$module$JML(c || b)]) }, style$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? {} : b; var c = Object.keys(b).map(function (a) { var c = Object.keys(b[a]).map(function (c) { return c + ":" + b[a][c] }); return a + " {" + c + "}" }).join("\n"); return el$$module$JML("style", a, [text$$module$JML(c)]) }, iframe$$module$JML = function (a, b) { a = void 0 === a ? {} : a; b = void 0 === b ? [] : b; return el$$module$JML("iframe", a, b) }, form$$module$JML = function (a, b) {
    a = void 0 === a ?
      {} : a; b = void 0 === b ? [] : b; return el$$module$JML("form", Object.assign({ method: "" }, a), b)
  }, text$$module$JML = function (a) { return el$$module$JML("_TEXT", { content: void 0 === a ? "" : a }, []) }, empty$$module$JML = function () { return text$$module$JML("") }, router$$module$JML = function (a, b) {
    var c, d = location.hash.substr(1), e; for (e in b) if (c = parseRoute$$module$JML(d, e)) return a.__PLUME__.routerData.hash != d && (a.__PLUME__.routerData = { data: Object.assign({ _errors: [] }, c), hash: d }, setTimeout(function () { try { window.scrollTo(0, 0), document.querySelector("[autofocus]").focus() } catch (f) { } })),
      b[e](a.__PLUME__.routerData.data); return text$$module$JML()
  }, root$$module$JML = function (a) { return div$$module$JML({}, a) }, jsonTable$$module$JML = function (a) { var b = Object.keys(a[0]); return table$$module$JML({}, [tr$$module$JML({}, b.map(function (a) { return th$$module$JML({}, [text$$module$JML(a.replace("_", " "))]) }))].concat($jscomp.arrayFromIterable(a.map(function (a) { return tr$$module$JML({}, [].concat($jscomp.arrayFromIterable(b.map(function (b) { return td$$module$JML({}, [text$$module$JML(a[b].toString())]) })))) })))) },
  component$$module$JML = function (a) { return el$$module$JML("_SHADOW", Object.assign({ css: "", shadow: { mode: "closed" }, template: null }, a)) }, goto$$module$JML = function (a) { location.hash = "#" + (a.startsWith("/") ? "" : "/") + a }, range$$module$JML = function (a, b, c) { c = void 0 === c ? 1 : c; return [].concat($jscomp.arrayFromIterable(Array(b || a).keys())).map(function (a) { return a * c }).map(function (c) { return c + (b ? a : 0) }).filter(function (a) { return a <= (b ? b : Infinity) }) }, clamp$$module$JML = function (a, b, c) { return a > c ? c : a < b ? b : a }, parseRoute$$module$JML =
    function (a, b) { if (-1 == b.indexOf(":")) { if (b == a || "*" == b) return {} } else { a = a.split("/"); b = b.split("/"); if (a.length != b.length) return !1; for (var c = {}, d = 0; d < b.length; d++) { var e = b[d]; if (0 == e.indexOf(":")) c[e.substr(1)] = a[d]; else if (e != a[d]) return !1 } return c } }, module$JML = { el: el$$module$JML }; module$JML.default = $jscompDefaultExport$$module$JML; module$JML.div = div$$module$JML; module$JML.span = span$$module$JML; module$JML.br = br$$module$JML; module$JML.hr = hr$$module$JML; module$JML.button = button$$module$JML;
module$JML.header = header$$module$JML; module$JML.navbar = navbar$$module$JML; module$JML.footer = footer$$module$JML; module$JML.article = article$$module$JML; module$JML.input = input$$module$JML; module$JML.textarea = textarea$$module$JML; module$JML.table = table$$module$JML; module$JML.tr = tr$$module$JML; module$JML.td = td$$module$JML; module$JML.th = th$$module$JML; module$JML.p = p$$module$JML; module$JML.b = b$$module$JML; module$JML.h = h$$module$JML; module$JML.a = a$$module$JML; module$JML.style = style$$module$JML;
module$JML.iframe = iframe$$module$JML; module$JML.form = form$$module$JML; module$JML.text = text$$module$JML; module$JML.empty = empty$$module$JML; module$JML.router = router$$module$JML; module$JML.root = root$$module$JML; module$JML.jsonTable = jsonTable$$module$JML; module$JML.component = component$$module$JML; module$JML.goto = goto$$module$JML; module$JML.range = range$$module$JML; module$JML.clamp = clamp$$module$JML;
//# sourceMappingURL=Plume.min.js.map
